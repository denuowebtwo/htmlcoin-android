//fabric.io
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates
        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.24.4'
    }
}

plugins {
    id 'com.gladed.androidgitversion' version '0.4.3'
}

//
apply plugin: 'com.android.application'
//fabric.io
apply plugin: 'io.fabric'
repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    google()
}
android {
    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        // bitcoinj brings in a native library for x86_64, which seems to confuse the playstore upload - just strip the file
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
    }

//    def appName = "HTMLCOIN"
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
//    def versionPropertiesFile = file('version.properties')
//    def autoVersionCode
//    if (versionPropertiesFile.canRead()) {
//        def Properties versionProps = new Properties()
//        versionProps.load(new FileInputStream(versionPropertiesFile))
//        autoVersionCode = versionProps['VERSION_CODE'].toInteger()
//    } else {
//        throw new GradleException("Could not read version.properties!")
//    }
//    ext.autoIncrementVersionCode = {
//        if (versionPropertiesFile.canRead()) {
//            def Properties versionProps = new Properties()
//            versionProps.load(new FileInputStream(versionPropertiesFile))
//            autoVersionCode = versionProps['VERSION_CODE'].toInteger() + 1
//            versionProps['VERSION_CODE'] = autoVersionCode.toString()
//            versionProps.store(versionPropertiesFile.newWriter(), null)
//        } else {
//            throw new GradleException("Could not read version.properties!")
//        }
//    }

    defaultConfig {
        applicationId "com.htmlcoin.wallet.app"
        minSdkVersion 19
        targetSdkVersion 27
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
//        versionCode autoVersionCode
//        versionName "0.9"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file(HTMLCOIN_RELEASE_STORE_FILE)
            storePassword HTMLCOIN_RELEASE_STORE_PASSWORD
            keyAlias "key0"
            keyPassword HTMLCOIN_RELEASE_STORE_PASSWORD
//            v1SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
        }
        debug {
            signingConfig = signingConfigs.release
        }
    }
    flavorDimensions "applicationId"
    productFlavors {
        dev {
            applicationId "com.htmlcoin.wallet.app.dev"
            buildConfigField 'String', 'SERVER_URL', '\"http://192.168.1.13:3001\"'
        }
        mainnet {
            applicationId "com.htmlcoin.wallet.app"
            buildConfigField 'String', 'SERVER_URL', '\"https://api.htmlcoin.com\"'
        }
        stagingTestnet {
            applicationId "com.htmlcoin.wallet.app.staging.testnet"
            buildConfigField 'String', 'SERVER_URL', '\"http://35.198.235.246:3001\"'
        }
        stagingRegtest {
            applicationId "com.htmlcoin.wallet.app.staging"
            buildConfigField 'String', 'SERVER_URL', '\"http://35.198.235.246:3001\"'
        }
    }
//    gradle.taskGraph.whenReady {taskGraph ->
//        if (taskGraph.hasTask(assembleRelease)) {
//            autoIncrementVersionCode()
//        }
//    }
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = appName + "-${versionName}(${versionCode})-${variant.buildType.name}.apk"
//        }
//    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile ('com.squareup.retrofit2:converter-simplexml:2.0.0-beta3'){
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    compile 'com.android.support:appcompat-v7:27.0.2'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile 'org.assertj:assertj-core:2.8.0'

    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.github.designsters:android-fork-bitcoinj:1.0.11'
//    compile (files('../submodules/android-fork-bitcoinj/core/target/bitcoinj-core-0.14.5.jar'))

    compile "com.google.android.gms:play-services-base:11.8.0"

    compile 'com.android.support:multidex:1.0.2'
    compile 'com.google.guava:guava:23.6-android'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.madgag.spongycastle:core:1.58.0.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.google.zxing:android-core:3.3.0'
    compile 'me.dm7.barcodescanner:zxing:1.8.4'
    compile 'io.reactivex:rxjava:1.2.2'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile('io.socket:socket.io-client:0.8.3') {
        exclude group: 'org.json', module: 'json'
    }
    compile 'com.airbnb.android:lottie:2.0.0-beta3'
    //fabric.io
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    //
    compile 'com.andkulikov:transitionseverywhere:1.7.2'
    compile 'com.alimuzaffar.lib:pinentryedittext:1.3.1'
    compile 'com.baoyz.pullrefreshlayout:library:1.2.0'
    compile 'com.github.JakeWharton:ViewPagerIndicator:2.4.1'
    compile 'com.mikhaellopez:hfrecyclerview:1.0.0'
    compile 'com.google.firebase:firebase-core:11.8.0'
    compile 'com.google.firebase:firebase-messaging:11.8.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'
    compile 'org.jsoup:jsoup:1.10.3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'

    compile "com.daimajia.swipelayout:library:1.2.0@aar"
}
apply plugin: 'com.google.gms.google-services'